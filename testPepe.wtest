import pepe.*

describe "Sueldo Pepe" {
	
	test "Caso 1" {

	pepe.actualizarCategoria(cadete)
	pepe.actualizarBonoResultado(bonoFijo)
	pepe.actualizarBonoPresentismo(presentismoNormal)
	pepe.agregarFaltas(3)

	assert.equals(20800, pepe.calcularSueldo())
	}
	test "Caso 2 "{
		pepe.actualizarCategoria(gerente)
		pepe.actualizarBonoResultado(bonoPorcentaje)
		pepe.actualizarBonoPresentismo(presentismoNulo)
		assert.equals(16500, pepe.calcularSueldo())
	}
	test "Caso 3"{
		pepe.actualizarCategoria(cadete)
		pepe.actualizarBonoResultado(bonoPorcentaje)
		pepe.actualizarBonoPresentismo(presentismoNormal)
		assert.equals(24000, pepe.calcularSueldo())
	}
	test "Caso 4"{
		pepe.actualizarCategoria(cadete)
		pepe.actualizarBonoResultado(bonoPorcentaje)
		pepe.actualizarBonoPresentismo(presentismoNormal)
		pepe.agregarFaltas(1)
		assert.equals(23000, pepe.calcularSueldo())
	}
}
describe "Sueldo Sofia" {
	test "Caso 1" {
		sofia.actualizarCategoria(cadete)
		sofia.actualizarBonoResultado(bonoFijo)
		assert.equals(26800, sofia.calcularSueldo())
	}
	test "Caso 2" {
		sofia.actualizarCategoria(gerente)
		sofia.actualizarBonoResultado(bonoPorcentaje)
		assert.equals(21450, sofia.calcularSueldo())
	}
	test "Caso 3" {
		sofia.actualizarCategoria(cadete)
		sofia.actualizarBonoResultado(bonoNulo)
		assert.equals(26000, sofia.calcularSueldo())
	}
}
describe "Sueldo Roque" {
	test "Caso 1" {
		roque.actualizarBonoResultado(bonoFijo)
		assert.equals(37800, roque.calcularSueldo())
	}
	test "Caso 2" {
		roque.actualizarBonoResultado(bonoPorcentaje)
		assert.equals(39800, roque.calcularSueldo())
	}
}
describe "Sueldo Ernesto" {
	test "Caso 1" {
		ernesto.actualizarCompa単ero(pepe)
		pepe.actualizarCategoria(cadete)
		ernesto.actualizarBonoPresentismo(presentismoNormal)
		assert.equals(22000, ernesto.calcularSueldo())
	}
	test "Caso 2" {
		ernesto.actualizarCompa単ero(sofia)
		sofia.actualizarCategoria(gerente)
		ernesto.actualizarBonoPresentismo(presentismoAjuste)
		assert.equals(19600, ernesto.calcularSueldo())
	}
	test "Caso 3"{
		ernesto.actualizarCompa単ero(roque)
		ernesto.actualizarBonoPresentismo(presentismoDemagogico)
		assert.equals(28300, ernesto.calcularSueldo())
	}
}
describe "Test Categorias" {
	test "Vendedor Pepe" {
		pepe.actualizarCategoria(vendedor)
		vendedor.activarAumento()
		pepe.actualizarBonoPresentismo(presentismoNormal)
		pepe.actualizarBonoResultado(bonoNulo)
		assert.equals(22000, pepe.calcularSueldo())
	}
	test "Vendedor Sofia"{
		sofia.actualizarCategoria(vendedor)
		vendedor.activarAumento()
		sofia.actualizarBonoResultado(bonoPorcentaje)
		assert.equals(28600, sofia.calcularSueldo())
		vendedor.desactivarAumento()
		assert.equals(22880, sofia.calcularSueldo())
	}
	test "Vendedor Ernesto"{
		ernesto.actualizarCompa単ero(sofia)
		sofia.actualizarCategoria(vendedor)
		vendedor.activarAumento()
		ernesto.actualizarBonoPresentismo(presentismoDemagogico)
		assert.equals(26300, ernesto.calcularSueldo())
		vendedor.desactivarAumento()
		assert.equals(21100, ernesto.calcularSueldo())
	}
}